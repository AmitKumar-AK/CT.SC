using System;
using Sitecore.Data.Items;
using Sitecore.LayoutService.Configuration;
using Sitecore.LayoutService.ItemRendering.ContentsResolvers;
using Sitecore.Mvc.Presentation;
using System.Collections.Specialized;

namespace CT.SC.Foundation.SitecoreExtensions.LayoutService.ItemRendering.ContentsResolvers
{
	public class CustomResolverDoctorRelatedContents : RenderingContentsResolver
	{
		public bool IncludeServerUrlInMediaUrls { get; set; }
		public bool UseContextItem { get; set; }
		public string ItemSelectorQuery { get; set; }
		public NameValueCollection Parameters { get; set; }
		public override object ResolveContents(Rendering rendering, IRenderingConfiguration renderingConfig)
		{
			/*
			var datasource = !string.IsNullOrEmpty(rendering.DataSource)
				? rendering.RenderingItem?.Database.GetItem(rendering.DataSource)
				: null;

			return new
			{
				name = datasource.Name,
				date = DateTime.Now,
				hello = "world"
			};
			*/
			Item contextItem = rendering.Item;
			if (contextItem == null)
			{
				return null;
			}

			Sitecore.Collections.ChildList relatedItem = contextItem.GetChildren();

			foreach (Item item in relatedItem)
			{
				
			}

			return new
			{
				name = contextItem.Name,
				date = DateTime.Now,
				hello = "world"
			};
		}


	}
}
